{"ast":null,"code":"var _jsxFileName = \"/workspaces/ToDoList/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from \"react\";\nimport './todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mytext, setMytext] = useState(\"\");\n  const [myarray, setMyarray] = useState([]);\n  const [editIdx, setEditIdx] = useState(\"\");\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"todoList\");\n    document.querySelector('.to-do_textbox').focus();\n    if (storedData) {\n      setMyarray(JSON.parse(storedData));\n    }\n  }, []);\n\n  // Save data to localStorage whenever myarray changes\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(myarray));\n  }, [myarray]);\n  function onChangeDo(event) {\n    setMytext(event.target.value);\n  }\n  function onClickAdd() {\n    document.querySelector('.to-do_textbox').focus();\n    if (mytext.trim() === \"\") {\n      // Display a warning message or handle the empty text case\n      alert(\"Please enter a value.\");\n      return;\n    }\n\n    // Add the text to the array\n    setMyarray([...myarray, mytext]);\n\n    // Reset text input and edit index\n    setMytext(\"\");\n    setEditIdx(\"\");\n  }\n  function removeItem(index) {\n    const updatedArray = myarray.filter((_, idx) => idx !== index);\n    setMyarray(updatedArray);\n  }\n  function editItem(index) {\n    setMytext(myarray[index]);\n    setEditIdx(index);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"txt\",\n        placeholder: \"Enter something...\",\n        value: mytext,\n        onChange: onChangeDo,\n        autoComplete: \"off\",\n        className: \"to-do_textbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"to-do_button\",\n        onClick: onClickAdd,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"to-do_table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: myarray.map((value, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"to-do_row to-do_item\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action_buttons\",\n                children: [index + 1, \". \", value, /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"Edit.png\",\n                  alt: \"edit\",\n                  title: \"Edit this Text\",\n                  onClick: () => editItem(index),\n                  height: \"20\",\n                  width: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action_buttons\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"Delete.png\",\n                  alt: \"delete\",\n                  title: \"Delete this Text\",\n                  onClick: () => removeItem(index),\n                  height: \"20\",\n                  width: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BFj1iEa/Il8k4RS8uFxZXOpjRg0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","mytext","setMytext","myarray","setMyarray","editIdx","setEditIdx","storedData","localStorage","getItem","document","querySelector","focus","JSON","parse","setItem","stringify","onChangeDo","event","target","value","onClickAdd","trim","alert","removeItem","index","updatedArray","filter","_","idx","editItem","map"],"sources":["/workspaces/ToDoList/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from \"react\";\nimport './todo.css';\n\nfunction App() {\n  const [mytext, setMytext] = useState(\"\");\n  const [myarray, setMyarray] = useState([]);\n  const [editIdx, setEditIdx] = useState(\"\");\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"todoList\");\n    document.querySelector('.to-do_textbox').focus();\n    if (storedData) {\n      setMyarray(JSON.parse(storedData));\n    }\n  }, []);\n\n  // Save data to localStorage whenever myarray changes\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(myarray));\n  }, [myarray]);\n\n  function onChangeDo(event) {\n    setMytext(event.target.value);\n  }\n\n  function onClickAdd() {\n    document.querySelector('.to-do_textbox').focus();\n    if (mytext.trim() === \"\") {\n      // Display a warning message or handle the empty text case\n      alert(\"Please enter a value.\");\n      return;\n    }\n  \n    // Add the text to the array\n    setMyarray([...myarray, mytext]);\n    \n    // Reset text input and edit index\n    setMytext(\"\");\n    setEditIdx(\"\");\n  }\n\n  function removeItem(index) {\n    const updatedArray = myarray.filter((_, idx) => idx !== index);\n    setMyarray(updatedArray);\n  }\n\n  function editItem(index) {\n    setMytext(myarray[index]);\n    setEditIdx(index);\n  }\n\n  return (\n    <div className=\"body\">\n      <center>\n        <br />\n        <input type=\"text\" name=\"txt\" placeholder=\"Enter something...\" value={mytext} onChange={onChangeDo} autoComplete=\"off\" className=\"to-do_textbox\" />\n        &nbsp;\n        <button className=\"to-do_button\" onClick={onClickAdd} >Add</button>\n        <br />\n        <b>\n          <table className=\"to-do_table\">\n            <tbody>\n              {myarray.map((value, index) => (\n                <tr key={index} className=\"to-do_row to-do_item\">\n                  <br/>\n                  <td className=\"action_buttons\">\n                    {index + 1}. {value}\n                  {/* </td> */}\n                  {/* <td className=\"action_buttons\"> */}\n                    <img src=\"Edit.png\" alt=\"edit\" title=\"Edit this Text\" onClick={() => editItem(index)} height=\"20\" width=\"20\" />\n                  </td>\n                  <td className=\"action_buttons\">\n                    <img src=\"Delete.png\" alt=\"delete\" title=\"Delete this Text\" onClick={() => removeItem(index)} height=\"20\" width=\"20\" />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </b>\n      </center>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC;AAEpB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACnDC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,CAACC,KAAK,EAAE;IAChD,IAAIL,UAAU,EAAE;MACdH,UAAU,CAACS,IAAI,CAACC,KAAK,CAACP,UAAU,CAAC,CAAC;IACpC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAR,SAAS,CAAC,MAAM;IACdS,YAAY,CAACO,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,SAAS,CAACb,OAAO,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,SAASc,UAAU,CAACC,KAAK,EAAE;IACzBhB,SAAS,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B;EAEA,SAASC,UAAU,GAAG;IACpBX,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,CAACC,KAAK,EAAE;IAChD,IAAIX,MAAM,CAACqB,IAAI,EAAE,KAAK,EAAE,EAAE;MACxB;MACAC,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;;IAEA;IACAnB,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEF,MAAM,CAAC,CAAC;;IAEhC;IACAC,SAAS,CAAC,EAAE,CAAC;IACbI,UAAU,CAAC,EAAE,CAAC;EAChB;EAEA,SAASkB,UAAU,CAACC,KAAK,EAAE;IACzB,MAAMC,YAAY,GAAGvB,OAAO,CAACwB,MAAM,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAKA,GAAG,KAAKJ,KAAK,CAAC;IAC9DrB,UAAU,CAACsB,YAAY,CAAC;EAC1B;EAEA,SAASI,QAAQ,CAACL,KAAK,EAAE;IACvBvB,SAAS,CAACC,OAAO,CAACsB,KAAK,CAAC,CAAC;IACzBnB,UAAU,CAACmB,KAAK,CAAC;EACnB;EAEA,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,uBACnB;MAAA,wBACE;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,KAAK;QAAC,WAAW,EAAC,oBAAoB;QAAC,KAAK,EAAExB,MAAO;QAAC,QAAQ,EAAEgB,UAAW;QAAC,YAAY,EAAC,KAAK;QAAC,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG,QAEnJ;QAAQ,SAAS,EAAC,cAAc;QAAC,OAAO,EAAEI,UAAW;QAAA,UAAE;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eACnE;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,uBACE;UAAO,SAAS,EAAC,aAAa;UAAA,uBAC5B;YAAA,UACGlB,OAAO,CAAC4B,GAAG,CAAC,CAACX,KAAK,EAAEK,KAAK,kBACxB;cAAgB,SAAS,EAAC,sBAAsB;cAAA,wBAC9C;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eACL;gBAAI,SAAS,EAAC,gBAAgB;gBAAA,WAC3BA,KAAK,GAAG,CAAC,EAAC,IAAE,EAACL,KAAK,eAGnB;kBAAK,GAAG,EAAC,UAAU;kBAAC,GAAG,EAAC,MAAM;kBAAC,KAAK,EAAC,gBAAgB;kBAAC,OAAO,EAAE,MAAMU,QAAQ,CAACL,KAAK,CAAE;kBAAC,MAAM,EAAC,IAAI;kBAAC,KAAK,EAAC;gBAAI;kBAAA;kBAAA;kBAAA;gBAAA,QAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAC5G,eACL;gBAAI,SAAS,EAAC,gBAAgB;gBAAA,uBAC5B;kBAAK,GAAG,EAAC,YAAY;kBAAC,GAAG,EAAC,QAAQ;kBAAC,KAAK,EAAC,kBAAkB;kBAAC,OAAO,EAAE,MAAMD,UAAU,CAACC,KAAK,CAAE;kBAAC,MAAM,EAAC,IAAI;kBAAC,KAAK,EAAC;gBAAI;kBAAA;kBAAA;kBAAA;gBAAA;cAAG;gBAAA;gBAAA;gBAAA;cAAA,QACpH;YAAA,GAVEA,KAAK;cAAA;cAAA;cAAA;YAAA,QAYf;UAAC;YAAA;YAAA;YAAA;UAAA;QACI;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACN;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAhFQzB,GAAG;AAAA,KAAHA,GAAG;AAkFZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}