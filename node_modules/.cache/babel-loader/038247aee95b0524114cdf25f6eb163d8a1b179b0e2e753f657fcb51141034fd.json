{"ast":null,"code":"var _jsxFileName = \"/workspaces/ToDoList/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./todo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mytext, setMytext] = useState(\"\");\n  const [myarray, setMyarray] = useState([]);\n  const [markedItems, setMarkedItems] = useState([]);\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"todoList\");\n    document.querySelector(\".to-do_textbox\").focus();\n    if (storedData) {\n      setMyarray(JSON.parse(storedData));\n    }\n  }, []);\n\n  // Save data to localStorage whenever myarray changes\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(myarray));\n  }, [myarray]);\n  function onChangeDo(event) {\n    setMytext(event.target.value);\n  }\n  function removeAll() {\n    setMyarray([]);\n  }\n  function onClickAdd() {\n    document.querySelector(\".to-do_textbox\").focus();\n    if (mytext.trim() === \"\") {\n      // Display a warning message or handle the empty text case\n      alert(\"Please enter a value.\");\n      return;\n    }\n\n    // Add the text to the array\n    setMyarray([...myarray, mytext]);\n\n    // Reset text input\n    setMytext(\"\");\n  }\n  function removeItem(index) {\n    const updatedArray = myarray.filter((_, idx) => idx !== index);\n    setMyarray(updatedArray);\n  }\n  function editItem(index) {\n    setMytext(myarray[index]);\n    document.querySelector(\".to-do_textbox\").focus();\n  }\n  function markItem(index) {\n    const isMarked = markedItems.includes(index);\n    if (isMarked) {\n      setMarkedItems(markedItems.filter(item => item !== index));\n    } else {\n      setMarkedItems([...markedItems, index]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          name: \"txt\",\n          placeholder: \"Enter something...\",\n          value: mytext,\n          onChange: onChangeDo,\n          autoComplete: \"off\",\n          className: \"to-do_textbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add_button\",\n          onClick: onClickAdd,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"to-do_table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: myarray.map((value, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: markedItems.includes(index) ? \"to-do_item marked\" : \"to-do_item\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [index + 1, \". \\xA0\\xA0\", value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"action_buttons1\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"Mark.png\",\n                    alt: \"Mark\",\n                    title: \"Mark as done\",\n                    onClick: () => markItem(index),\n                    height: \"20\",\n                    width: \"20\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"action_buttons2\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"Edit.png\",\n                    alt: \"Edit\",\n                    title: \"Edit this Text\",\n                    onClick: () => editItem(index),\n                    height: \"20\",\n                    width: \"20\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"action_buttons3\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"Delete.png\",\n                    alt: \"Delete\",\n                    title: \"Delete this Text\",\n                    onClick: () => removeItem(index),\n                    height: \"20\",\n                    width: \"20\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), myarray.length >= 5 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeAll,\n        className: \"remove-all-button\",\n        children: \"Remove All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gpy0iO1kbjuJWOs1+zgTioLzXXU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","mytext","setMytext","myarray","setMyarray","markedItems","setMarkedItems","storedData","localStorage","getItem","document","querySelector","focus","JSON","parse","setItem","stringify","onChangeDo","event","target","value","removeAll","onClickAdd","trim","alert","removeItem","index","updatedArray","filter","_","idx","editItem","markItem","isMarked","includes","item","map","length"],"sources":["/workspaces/ToDoList/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./todo.css\";\n\nfunction App() {\n  const [mytext, setMytext] = useState(\"\");\n  const [myarray, setMyarray] = useState([]);\n  const [markedItems, setMarkedItems] = useState([]);\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"todoList\");\n    document.querySelector(\".to-do_textbox\").focus();\n    if (storedData) {\n      setMyarray(JSON.parse(storedData));\n    }\n  }, []);\n\n  // Save data to localStorage whenever myarray changes\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(myarray));\n  }, [myarray]);\n\n  function onChangeDo(event) {\n    setMytext(event.target.value);\n  }\n\n  function removeAll() {\n    setMyarray([]);\n  }\n\n  function onClickAdd() {\n    document.querySelector(\".to-do_textbox\").focus();\n    if (mytext.trim() === \"\") {\n      // Display a warning message or handle the empty text case\n      alert(\"Please enter a value.\");\n      return;\n    }\n\n    // Add the text to the array\n    setMyarray([...myarray, mytext]);\n\n    // Reset text input\n    setMytext(\"\");\n  }\n\n  function removeItem(index) {\n    const updatedArray = myarray.filter((_, idx) => idx !== index);\n    setMyarray(updatedArray);\n  }\n\n  function editItem(index) {\n    setMytext(myarray[index]);\n    document.querySelector(\".to-do_textbox\").focus();\n  }\n\n  function markItem(index) {\n    const isMarked = markedItems.includes(index);\n    if (isMarked) {\n      setMarkedItems(markedItems.filter((item) => item !== index));\n    } else {\n      setMarkedItems([...markedItems, index]);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <center>\n        <div className=\"input-container container\">\n          <input\n            type=\"search\"\n            name=\"txt\"\n            placeholder=\"Enter something...\"\n            value={mytext}\n            onChange={onChangeDo}\n            autoComplete=\"off\"\n            className=\"to-do_textbox\"\n          />\n          &nbsp;\n          <button className=\"add_button\" onClick={onClickAdd}>\n            Add\n          </button>\n        </div>\n        <br />\n        <br />\n        <b>\n          <table className=\"to-do_table\">\n            <tbody>\n              {myarray.map((value, index) => (\n                <tr\n                  key={index}\n                  className={\n                    markedItems.includes(index) ? \"to-do_item marked\" : \"to-do_item\"\n                  }\n                >\n                  <br />\n                  <td>{index + 1}. &nbsp;&nbsp;{value}</td>\n                  <td>\n                    <span className=\"action_buttons1\">\n                      <img\n                        src=\"Mark.png\"\n                        alt=\"Mark\"\n                        title=\"Mark as done\"\n                        onClick={() => markItem(index)}\n                        height=\"20\"\n                        width=\"20\"\n                      />\n                    </span>\n                    <span className=\"action_buttons2\">\n                      <img\n                        src=\"Edit.png\"\n                        alt=\"Edit\"\n                        title=\"Edit this Text\"\n                        onClick={() => editItem(index)}\n                        height=\"20\"\n                        width=\"20\"\n                      />\n                    </span>\n                    <span className=\"action_buttons3\">\n                      <img\n                        src=\"Delete.png\"\n                        alt=\"Delete\"\n                        title=\"Delete this Text\"\n                        onClick={() => removeItem(index)}\n                        height=\"20\"\n                        width=\"20\"\n                      />\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </b>\n        <br />\n        {myarray.length >= 5 && (\n          <button onClick={removeAll} className=\"remove-all-button\">\n            Remove All\n          </button>\n        )}\n      </center>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}